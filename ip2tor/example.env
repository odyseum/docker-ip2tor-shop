# This variables are setting up the postgres container
POSTGRES_USER=my_postgres_user
POSTGRES_PASSWORD=my_postgress_password
POSTGRES_DB=ip2tor_shop

# This variables are for the django app
# If using the postgres database, then we need to fill the URL with the same values as above
DATABASE_URL="postgres://my_postgres_user:my_postgress_password@postgres:5432/ip2tor_shop"
EMAIL_URL="submission://sender@example.com:password@smtp.exmaple.com:587/"

DJANGO_SUPERUSER_NAME="MY_SHOP_ADMIN"
DJANGO_SUPERUSER_PASSWORD="MY_ADMIN_PASSWORD"
DJANGO_SUPERUSER_EMAIL="admin@email.com"

DJANGO_OPERATOR_NAME="operator"
DJANGO_OPERATOR_PASSWORD="operator_password"
DJANGO_OPERATOR_EMAIL="operator@shop.com"

# This is the port through which nginx will connect to the django/daphne server
DJANGO_DAPHNE_PORT=8001
DJANGO_HTTP_PORT=8002

# Node to add at init
# At the moment, the only accepted values are LndGRpcNode or LndRestNode (see implementation in charged.lnnode.models.py)
#CHARGED_LND_CLASS=LndRestNode
CHARGED_LND_CLASS=LndGRpcNode

CHARGED_LND_PORT_REST=8080
CHARGED_LND_PORT_GRPC=10009

# The name must be sufficiently unique, that is, we will check if another node exists with the same name and if it does, then we don't create a new instance.
CHARGED_LND_NAME=MyNode@home
CHARGED_LND_PRIORITY=0
# Username of the owner. The user must exist
CHARGED_LND_OWNER=operator
# HEX formatted
CHARGED_LND_MACAROON_ADMIN=
CHARGED_LND_MACAROON_INVOICE=
CHARGED_LND_MACAROON_READONLY=
# PEM Formatted, add text here. For some reason, if you add it in one line, there is an error, so you need to keep the BEGIN and END lines separate
CHARGED_LND_TLS_CERTIFICATE="-----BEGIN CERTIFICATE-----
ASDFASDFADSF...ASDFASDF=
-----END CERTIFICATE-----"
# Boolean (True / False)
CHARGED_LND_TLS_VERIFICATION=True

# Either an IP or an onion address (DO NOT include the port)
CHARGED_LND_HOST=
# This is taken into account if the CHARGED_LND_HOST is an onion address. Format is IP:Port
CHARGED_LND_HTTP_PROXY=192.168.1.110:9080

# These are the classes that implement the LndNode class (see file charged/lnnode/models/lnd.py)
# Do not touch it unless you know what you are doing
CHARGED_LNDNODE_IMPLEMENTING_CLASSES=LndGRpcNode,LndRestNode

# The first site we register in Django, so we can link the host to it
SHOP_SITE_NAME="IP2TOR SHOP SITE"
SHOP_SITE_DOMAIN=my_ip2tor.com

# Optional - register a Host on starting up (if it exists already won't do anything)
# True or False, depending if you want to register the first host automatically based on the env variables below
SHOP_FIRST_HOST_REGISTER=True

# This host will be linked to 
# - the site we created based on the variables SHOP_SITE_NAME, SHOP_SITE_DOMAIN
# - the operator user we created based on the variables DJANGO_OPERATOR_NAME, DJANGO_OPERATOR_PASSWORD, DJANGO_OPERATOR_EMAIL

# We will create one range of ports based on SHOP_FIRST_HOST_PORT_START and SHOP_FIRST_HOST_PORT_END, but this can be expanded and edited from the admin menu later on
SHOP_FIRST_HOST_NAME=host1
SHOP_FIRST_HOST_IP=192.168.0.111
SHOP_FIRST_HOST_PORT_RANGE_TYPE=T
SHOP_FIRST_HOST_PORT_START=10000
SHOP_FIRST_HOST_PORT_END=20000
SHOP_FIRST_HOST_IS_ENABLED=True
SHOP_FIRST_HOST_IS_ALIVE=True
SHOP_FIRST_HOST_IS_TESTNET=False
SHOP_FIRST_HOST_OFFERS_TOR_BRIDGES=True
SHOP_FIRST_HOST_TOR_BRIDGE_DURATION=86400
SHOP_FIRST_HOST_TOR_BRIDGE_PRICE_INITIAL=25000
SHOP_FIRST_HOST_TOR_BRIDGE_PRICE_EXTENSION=20000
SHOP_FIRST_HOST_OFFERS_RSSH_TUNNELS=False
SHOP_FIRST_HOST_RSSH_TUNNEL_PRICE=1000
SHOP_FIRST_HOST_TERMS_OF_SERVICE=""
SHOP_FIRST_HOST_TERMS_OF_SERVICE_URL=""
SHOP_FIRST_HOST_CI_STATUS=0
SHOP_FIRST_HOST_CI_DATE="2022-12-19 00:00"
SHOP_FIRST_HOST_CI_MESSAGE=

# Comma separated list of port numbers (no spaces)
# if the onion port is in this list, it will not be checked that it is HTTPS
WHITELISTED_SERVICE_PORTS=8333,9735

# The sample hidden service used for tests
# To get the onion address, you need to run this command once the container 'ip2tor-shop-sample-hidden-service' is up and running:
#   docker exec -it ip2tor-shop-sample-hidden-service cat /var/lib/tor/sample_hidden_service/hostname
# You can leave the port as it is, or can change it to another if you wish
# When the container 'ip2tor-shop-sample-hidden-service' is running, the service is reachable from any Tor browser at:
# <SAMPLE_HIDDEN_SERVICE_ONION_ADDRESS>:<SAMPLE_HIDDEN_SERVICE_ONION_PORT>

SAMPLE_HIDDEN_SERVICE_ONION_ADDRESS=
SAMPLE_HIDDEN_SERVICE_ONION_PORT=12345
# This is the default port for the sample service we create, that will be hidden with the onion address for tests. No need to change this
SAMPLE_HTTP_SERVICE_PORT=8080